@typeparam TItem
@typeparam TCard

<div class="list-container">
    @if (Items == null)
    {
        <div class="alert alert-info">Loading items, please wait...</div>
    }
    else if (Items.Any())
    {
        if (FilteredItems != null)
        {
            @if (FilteredItems.Any())
            {
                @foreach (var item in SortFilteredItems?.Invoke(FilteredItems) ?? FilteredItems)
                {
                    <div class="mb-4">
                        <DynamicComponent Type="typeof(TCard)" Parameters="@(new Dictionary<string, object> { [typeof(TItem).Name] = item })" />
                    </div>
                }
            }
            else
            {
                <h2>Nothing found</h2>
            }
        }
        else
        {
            @foreach (var item in SortItems?.Invoke(Items) ?? Items)
            {
                <div class="mb-4">
                    <DynamicComponent Type="typeof(TCard)" Parameters="@(new Dictionary<string, object> { [typeof(TItem).Name] = item })" />
                </div>
            }
        }
    }
    else
    {
        <div class="alert alert-warning">No items found.</div>
    }
</div>

@code {
    [Parameter]
    public IEnumerable<TItem>? Items { get; set; }

    [Parameter]
    public IEnumerable<TItem>? FilteredItems { get; set; }

    [Parameter]
    public Func<IEnumerable<TItem>, IEnumerable<TItem>>? SortItems { get; set; }

    [Parameter]
    public Func<IEnumerable<TItem>, IEnumerable<TItem>>? SortFilteredItems { get; set; }
}
